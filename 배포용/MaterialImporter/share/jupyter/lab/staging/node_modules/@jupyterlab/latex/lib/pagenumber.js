import { ReactWidget } from '@jupyterlab/apputils';
import * as React from 'react';
/**
 * Page number React component.
 */
class PageNumberComponent extends React.Component {
    constructor() {
        super(...arguments);
        this.state = {
            currentPageNumber: 0,
            pagesCount: 0,
            userInput: null
        };
        /**
         * If user modifies the input value, store that text in `userInput` state
         * property.
         */
        this.handleChange = (evt) => {
            const userInput = evt.target.value;
            this.setState({ userInput });
        };
        /**
         * Handle input element focus.
         */
        this.handleFocus = (evt) => {
            evt.target.select();
        };
        /**
         * When the input element loses focus, change current page according to the
         * input value.
         */
        this.handleBlur = (evt) => {
            const { value } = evt.target;
            this.setCurrentPage(value);
        };
        /**
         * If `Enter` key is pressed, change current page according to the input
         * value.
         */
        this.handleKeyDown = (evt) => {
            if (evt.key === 'Enter') {
                const { value } = evt.target;
                this.setCurrentPage(value);
            }
        };
        /**
         * Update the state when page data change.
         */
        this.handlePageDataChange = () => {
            const { widget } = this.props;
            if (!widget.viewer) {
                return;
            }
            const { currentPageLabel, currentPageNumber, pagesCount } = widget.viewer;
            this.setState({
                currentPageLabel,
                currentPageNumber,
                pagesCount,
                userInput: null
            });
        };
    }
    /**
     * Start listening PDF viewer events.
     */
    componentDidMount() {
        this.props.widget.ready.then(() => {
            // Viewer will be available after the `ready` promise resolves.
            const { eventBus } = this.props.widget.viewer;
            eventBus.on('firstpage', this.handlePageDataChange);
            eventBus.on('pagechanging', this.handlePageDataChange);
            eventBus.on('pagelabels', this.handlePageDataChange);
            this.handlePageDataChange();
        });
    }
    /**
     * Stop listening PDF viewer events.
     */
    componentWillUnmount() {
        this.props.widget.ready.then(() => {
            // Viewer will be available after the `ready` promise resolves.
            const { eventBus } = this.props.widget.viewer;
            eventBus.off('firstpage', this.handlePageDataChange);
            eventBus.off('pagechanging', this.handlePageDataChange);
            eventBus.off('pagelabels', this.handlePageDataChange);
        });
    }
    /**
     * Change current page.
     */
    setCurrentPage(pageLabel) {
        const { widget } = this.props;
        if (!widget.viewer) {
            return;
        }
        widget.viewer.currentPageLabel = pageLabel;
        // Reset user input.
        this.setState({ userInput: null });
    }
    /**
     * Render page number widget.
     */
    render() {
        const { currentPageLabel, currentPageNumber, pagesCount, userInput } = this.state;
        const text = currentPageLabel
            ? ` (${currentPageNumber} of ${pagesCount})`
            : ` of ${pagesCount}`;
        const value = userInput !== null
            ? userInput
            : currentPageLabel || currentPageNumber.toString();
        return (React.createElement("div", { className: "jp-PDFJSPageNumber" },
            React.createElement("span", null,
                React.createElement("input", { value: value, onBlur: this.handleBlur, onChange: this.handleChange, onFocus: this.handleFocus, onKeyDown: this.handleKeyDown }),
                React.createElement("span", null, text))));
    }
}
/**
 * Phosphor Widget version of PageNumberComponent.
 */
export class PageNumberWidget extends ReactWidget {
    constructor(props) {
        super();
        this._props = props;
    }
    render() {
        return React.createElement(PageNumberComponent, Object.assign({}, this._props));
    }
}
